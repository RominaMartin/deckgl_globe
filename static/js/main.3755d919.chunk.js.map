{"version":3,"sources":["MainGlobe/Actions/requests.js","MainGlobe/Actions/actions.js","MainGlobe/Components/AreaWidget.js","Components/ListItem.js","MainGlobe/Components/MainGlobeList.js","MainGlobe/constants.js","MainGlobe/Components/MainGlobeMap.js","MainGlobe/Containers/MainGlobeContainer.js","hooks/useKeyPress.js","index.js"],"names":["getCountries","a","axios","get","response","data","initMainGlobe","countries","defaultSelected","selected","StyledAreaWrapper","styled","div","StyledTotal","span","AreaWidget","area","StyledItem","li","ListItem","onHover","onClick","onMouseEnter","onMouseLeave","iso","flag","name","StyledListWrapper","StyledInput","input","StyledSelected","StyledControls","MainGlobeList","search","onItemHover","onItemClick","handleClearSelection","searchRef","useRef","useState","itemList","setItemList","searchTerm","setSearchTerm","selectedCheck","setSelectedCheck","useEffect","current","focus","setFilteredList","filtered","filter","item","includes","toLowerCase","ref","type","placeholder","value","onChange","e","target","autoFocus","checked","readOnly","htmlFor","length","map","DEFAULT_VIEW_STATE","latitude","longitude","zoom","THEME","light","border","polygon","background","container","hovered","hoveredBorder","dark","MainGlobeMap","theme","deckRef","CONSTANTS","viewState","setViewState","GLOBE_VIEW","GlobeView","x","coordinates","getColor","d","properties","iso_a3","getBorderColor","views","controller","onViewStateChange","opacity","getPolygon","stroked","filled","getFillColor","parameters","cull","lineWidthMinPixels","getLineColor","pickable","updateTriggers","object","StyledMainGlobeContainer","StyledSocial","MainGlobeContainer","letterTyped","targetKey","keyPressed","setKeyPressed","downHandler","key","match","window","addEventListener","removeEventListener","useKeyPress","setCountries","hoveredItem","setHoveredItem","selectedItems","setSelectedItems","totalArea","setTotalArea","basicData","Math","floor","reduce","accumulator","getAreaFromSelected","selectedList","handleSelection","src","frameBorder","width","scrolling","height","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3755d919.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const getCountries = async () => {\n  const response = await axios.get(\n    \"https://gist.githubusercontent.com/RominaMartin/7ab40a307c57721eb036e2dfa12edcbf/raw/06d184f0d9634aed7aa218162867e8e8a2dffd24/countries.json\"\n  );\n\n  return response.data;\n};\n","import { getCountries } from \"./requests\";\n\nexport const initMainGlobe = async () => {\n  const countries = await getCountries();\n  const defaultSelected = [\n    \"ESP\",\n    \"FRA\",\n    \"VEN\",\n    \"CAN\",\n    \"ITA\",\n    \"USA\",\n    \"BEL\",\n    \"NLD\",\n    \"COL\",\n    \"DEU\",\n    \"GBR\",\n    \"DNK\",\n  ];\n\n  return { countries: countries, selected: defaultSelected };\n};\n\nexport const handleSelection = ({ current, selected }) => {\n  if (current.includes(selected))\n    return current.filter((item) => item !== selected);\n\n  return [...current, selected];\n};\n\nexport const getAreaFromSelected = ({ data, selected }) =>\n  Math.floor(\n    data.reduce(\n      (accumulator, current) =>\n        (selected.includes(current.iso) ? current.area : 0) + accumulator,\n      0\n    )\n  );\n","import styled from \"styled-components\";\n\nconst AreaWidget = ({ area }) => {\n  return (\n    <StyledAreaWrapper>\n      <span>Area</span>\n\n      <StyledTotal>{area} kmÂ²</StyledTotal>\n    </StyledAreaWrapper>\n  );\n};\n\nconst StyledAreaWrapper = styled.div`\n  position: absolute;\n  right: 20px;\n  top: 50px;\n  padding: 8px;\n  box-sizing: border-box;\n  background: #f5f5f5;\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n\n  > span {\n    font-weight: bold;\n  }\n`;\n\nconst StyledTotal = styled.span``;\n\nexport default AreaWidget;\n","import styled from \"styled-components\";\n\nconst ListItem = ({ data, onHover, onClick, selected }) => {\n  return (\n    <StyledItem\n      onMouseEnter={() => onHover(data)}\n      onMouseLeave={() => onHover(null)}\n      onClick={() => onClick(data.iso)}\n      selected={selected}\n    >\n      <span>{data.flag}</span>\n      <span>{data.name}</span>\n    </StyledItem>\n  );\n};\n\nconst StyledItem = styled.li`\n  display: flex;\n  align-items: center;\n  background-color: ${({ selected }) => (selected ? \"#ababab\" : \"#fff\")};\n  padding: 8px;\n  border-bottom: 1px solid #eee;\n  gap: 10px;\n\n  span:first-child {\n    text-align: center;\n  }\n\n  :hover {\n    background: #ccc;\n    cursor: pointer;\n  }\n`;\n\nexport default ListItem;\n","import { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport ListItem from \"../../Components/ListItem\";\n\nconst MainGlobeList = ({\n  data,\n  selected,\n  search,\n  onItemHover = () => {},\n  onItemClick = () => {},\n  handleClearSelection = () => {},\n}) => {\n  const searchRef = useRef();\n  const [itemList, setItemList] = useState(data);\n  const [searchTerm, setSearchTerm] = useState(search);\n  const [selectedCheck, setSelectedCheck] = useState(false);\n\n  useEffect(() => {\n    setItemList(data);\n  }, [data]);\n\n  useEffect(() => {\n    if (search === \"\") setSearchTerm(search);\n\n    searchRef.current.focus();\n  }, [search]);\n\n  useEffect(() => {\n    setFilteredList();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selected, searchTerm, selectedCheck]);\n\n  const setFilteredList = () => {\n    let filtered = [...data];\n\n    if (selectedCheck) {\n      filtered = filtered.filter((item) => selected.includes(item.iso));\n    }\n\n    if (searchTerm) {\n      filtered = filtered.filter((item) =>\n        item.name.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    setItemList(filtered);\n  };\n\n  const handleInputChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  return (\n    <StyledListWrapper>\n      <StyledInput\n        ref={searchRef}\n        type=\"text\"\n        placeholder=\"Search\"\n        value={searchTerm}\n        onChange={handleInputChange}\n        autoFocus\n      />\n      <StyledControls>\n        <StyledSelected onClick={() => setSelectedCheck(!selectedCheck)}>\n          <input\n            type=\"checkbox\"\n            name=\"input_select\"\n            checked={selectedCheck}\n            readOnly\n          />\n          <label htmlFor=\"input_select\">Only selected</label>\n        </StyledSelected>\n        {selected.length ? (\n          <button onClick={handleClearSelection}>Clear</button>\n        ) : (\n          <></>\n        )}\n      </StyledControls>\n      <ul>\n        {itemList.map((item) => (\n          <ListItem\n            key={item.iso}\n            data={item}\n            onHover={onItemHover}\n            onClick={onItemClick}\n            selected={selected.includes(item.iso)}\n          />\n        ))}\n      </ul>\n    </StyledListWrapper>\n  );\n};\n\nconst StyledListWrapper = styled.div`\n  position: absolute;\n  left: 20px;\n  top: 20px;\n  padding: 8px;\n  box-sizing: border-box;\n  background: #fff;\n  max-height: calc(100vh - 40px);\n  width: 250px;\n  overflow-y: auto;\n  scroll-behavior: smooth;\n\n  ::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: #888;\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nconst StyledInput = styled.input`\n  box-sizing: border-box;\n  padding: 10px;\n  margin-bottom: 4px;\n  border-style: none;\n  background: #f5f5f5;\n  width: 100%;\n\n  :focus {\n    background: #eee;\n    outline: none;\n  }\n`;\n\nconst StyledSelected = styled.div`\n  margin: 10px 0;\n\n  label:hover,\n  input:hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledControls = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  button {\n    height: fit-content;\n    background: transparent;\n    border: 1px solid #ccc;\n  }\n\n  button:hover {\n    cursor: pointer;\n    border-color: #5b5b5b;\n  }\n`;\n\nexport default MainGlobeList;\n","export const COUNTRIES =\n  \"https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_50m_admin_0_countries.geojson\";\n\nexport const DEFAULT_VIEW_STATE = {\n  latitude: 40.454572474788996,\n  longitude: -3.7027573585510254,\n  zoom: 1,\n};\n\nexport const THEME = {\n  light: {\n    border: [161, 105, 40],\n    polygon: [189, 146, 90],\n    background: [214, 189, 141],\n    selected: [237, 234, 194],\n    container: \"#b5c8b8\",\n    hovered: [121, 167, 172],\n    hoveredBorder: [40, 135, 161],\n  },\n  dark: {\n    border: [35, 41, 49],\n    polygon: [57, 62, 70],\n    background: [170, 170, 170],\n    selected: [78, 204, 163],\n    container: \"#222831\",\n    hovered: [255, 239, 161],\n    hoveredBorder: [246, 245, 245],\n  },\n};\n","import { _GlobeView as GlobeView } from \"@deck.gl/core\";\nimport { DeckGL, GeoJsonLayer, SolidPolygonLayer } from \"deck.gl\";\nimport { useEffect, useRef, useState } from \"react\";\nimport * as CONSTANTS from \"../constants\";\n\nconst MainGlobeMap = ({ data, theme, hovered, onItemClick = () => {} }) => {\n  const deckRef = useRef(null);\n  const [viewState, setViewState] = useState(CONSTANTS.DEFAULT_VIEW_STATE);\n  const GLOBE_VIEW = new GlobeView({ x: 120 });\n\n  useEffect(() => {\n    if (hovered) {\n      setViewState({\n        ...viewState,\n        ...hovered.coordinates,\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hovered]);\n\n  const getColor = (d) => {\n    if (data.includes(d.properties.iso_a3)) return theme.selected;\n\n    if (hovered && hovered.iso === d.properties.iso_a3) return theme.hovered;\n\n    return theme.polygon;\n  };\n\n  const getBorderColor = (d) =>\n    hovered && hovered.iso === d.properties.iso_a3\n      ? theme.hoveredBorder\n      : theme.border;\n\n  return (\n    <DeckGL\n      ref={deckRef}\n      views={GLOBE_VIEW}\n      viewState={viewState}\n      controller={true}\n      onViewStateChange={(e) => setViewState(e.viewState)}\n    >\n      <SolidPolygonLayer\n        data={[\n          [\n            [\n              [-180, 90],\n              [0, 90],\n              [180, 90],\n              [180, -90],\n              [0, -90],\n              [-180, -90],\n            ],\n          ],\n        ]}\n        opacity={0.5}\n        getPolygon={(d) => d}\n        stroked={false}\n        filled={true}\n        getFillColor={theme.background}\n        parameters={{ cull: true }}\n      />\n\n      <GeoJsonLayer\n        data={CONSTANTS.COUNTRIES}\n        lineWidthMinPixels={2}\n        stroked={true}\n        filled={true}\n        getLineColor={getBorderColor}\n        getFillColor={getColor}\n        pickable={true}\n        updateTriggers={{\n          getFillColor: getColor,\n          getLineColor: getBorderColor,\n        }}\n        onClick={(e) => onItemClick(e.object.properties.iso_a3)}\n      />\n    </DeckGL>\n  );\n};\n\nexport default MainGlobeMap;\n","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useKeyPress } from \"../../hooks/useKeyPress\";\nimport {\n  initMainGlobe,\n  handleSelection,\n  getAreaFromSelected,\n} from \"../Actions/actions\";\nimport AreaWidget from \"../Components/AreaWidget\";\nimport MainGlobeList from \"../Components/MainGlobeList\";\nimport MainGlobeMap from \"../Components/MainGlobeMap\";\nimport { THEME } from \"../constants\";\n\nconst MainGlobeContainer = () => {\n  const [theme] = useState(\"dark\");\n  const letterTyped = useKeyPress();\n  const [countries, setCountries] = useState([]);\n  const [hoveredItem, setHoveredItem] = useState(null);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(letterTyped);\n  const [totalArea, setTotalArea] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      const basicData = await initMainGlobe();\n      setCountries(basicData.countries);\n      setSelectedItems(basicData.selected);\n    })();\n  }, []);\n\n  useEffect(() => {\n    setSearchTerm(letterTyped);\n  }, [letterTyped]);\n\n  useEffect(() => {\n    setTotalArea(\n      getAreaFromSelected({ data: countries, selected: selectedItems })\n    );\n  }, [countries, selectedItems]);\n\n  const onItemClick = (selected) => {\n    const selectedList = handleSelection({ current: selectedItems, selected });\n    setSelectedItems(selectedList);\n  };\n\n  const onClear = () => {\n    setSelectedItems([]);\n    setSearchTerm(\"\");\n  };\n\n  return (\n    <StyledMainGlobeContainer background={THEME[theme].container}>\n      <StyledSocial>\n        <iframe\n          src=\"https://ghbtns.com/github-btn.html?user=rominamartin&repo=deckgl_globe&type=star&count=true\"\n          frameBorder=\"0\"\n          width=\"100\"\n          scrolling=\"0\"\n          height=\"20\"\n          title=\"GitHub\"\n        ></iframe>\n      </StyledSocial>\n      <MainGlobeMap\n        data={selectedItems}\n        theme={THEME[theme]}\n        hovered={hoveredItem}\n        onItemClick={onItemClick}\n      />\n      <MainGlobeList\n        data={countries}\n        onItemHover={setHoveredItem}\n        onItemClick={onItemClick}\n        selected={selectedItems}\n        search={searchTerm}\n        handleClearSelection={onClear}\n      />\n      <AreaWidget area={totalArea} />\n    </StyledMainGlobeContainer>\n  );\n};\n\nconst StyledMainGlobeContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: ${({ background }) => background};\n`;\n\nconst StyledSocial = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  z-index: 1;\n`;\n\nexport default MainGlobeContainer;\n","import { useState, useEffect } from \"react\";\n\nexport const useKeyPress = (targetKey = null, type = \"letter\") => {\n  const [keyPressed, setKeyPressed] = useState(\"\");\n\n  function downHandler({ key }) {\n    if (!targetKey && type === \"letter\" && key.match(/^[A-Za-z]$/)) {\n      setKeyPressed(key);\n    } else if (type === \"letter\" && key === \"Escape\") {\n      setKeyPressed(\"\");\n    } else if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return keyPressed;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport MainGlobeContainer from \"./MainGlobe/Containers/MainGlobeContainer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainGlobeContainer />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}